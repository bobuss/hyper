#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
http2dump

Decodes a binary stream of HTTP/2 data into a textual representation of the
encoded frame data.

Usage:
  http2dump [options] <infile>
  http2dump -h | --help
  http2dump --version

Options:
  -o <outfile>, --output=<outfile>   File to write output to instead of stdout.
  -h, --help                         Show this screen.
  --version                          Show version.
"""
# Version compatibility
from __future__ import print_function

import sys

from docopt import docopt
import hyper


def main(infile=None, outfile=None):
    """
    The main http2dump loop.

    Generally, this loop executes as follows:
      - Read from the binary file until a frame is decoded.
      - Print the frame to stdout.
      - Repeat

    The loop terminates when the binary file is exhausted.
    """
    while True:
        # Parse the frame.
        frame_header = infile.read(9)
        frame, length = hyper.http20.Frame.parse_frame_header(frame_header)
        body = infile.read(length)
        frame.parse_body(body)

        # Done! In this early iteration of the script, we'll just print the
        # frame types to stdout.
        print(frame.__class__.__name__)


if __name__ == '__main__':
    options = docopt(__doc__, help=True, version=hyper.__version__)
    infile = options['<infile>']
    outfile = options.get('output', sys.stdout)

    main(infile, outfile)
